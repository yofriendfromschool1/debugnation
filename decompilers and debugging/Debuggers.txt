UserInputService = game:GetService("UserInputService")
local IsOnMobile = table.find({
	Enum.Platform.IOS,
	Enum.Platform.Android
}, UserInputService:GetPlatform())
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
	Title = "Debuggers",
	SubTitle = "LMAO",
	TabWidth = 160,
	Size = UDim2.fromOffset(580, 460),
	Acrylic = false,
	Theme = "Dark",
	MinimizeKey = Enum.KeyCode.LeftControl
})
local Discord = Window:AddTab({
	Title = "Discords",
	Icon = "globe"
})
local Options = Fluent.Options
Discord:AddButton({
	Title = "Discord Invite",
	Description = "Copys Discord invite link",
	Callback = function()
		setclipboard(string)
	end
})
Discord:AddButton({
	Title = "Discord Invite OLD",
	Description = "Copys OLD Discord invite link",
	Callback = function()
		setclipboard(string2)
	end
})
local Debugs = Window:AddTab({
	Title = "Debuggers",
	Icon = "globe"
})
Debugs:AddButton({
	Title = "IY",
	Description = "Helps just noclip or doing things faster or fly or wtv",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
	end
})
Debugs:AddButton({
	Title = "Dex",
	Description = "Explorer",
	Callback = function()
		if IsOnMobile then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/Dex/Mobile%20Dex%20Explorer.txt"))()
		else
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
		end
	end
})
local ACBypass1 = Window:AddTab({
	Title = "Anti Cheats",
	Icon = "globe"
})
ACBypass1:AddButton({
	Title = "Anti Kick",
	Description = "stops local scripts from kicking you",
	Callback = function()
		local mt = getrawmetatable(game)

		setreadonly(mt, false)

		local oldmt = mt.__namecall

		mt.__namecall = newcclosure(function(Self, ...)


		local method = getnamecallmethod()

		if method == 'Kick' then
		
			print("Tried To kick")
			wait(9e9)
			return nil

		end

		return oldmt(Self, ...)

		end)

		setreadonly(mt, true)
	end
})
ACBypass1:AddButton({
	Title = "Bypass AntiCheats/Kicks",
	Description = "best fr",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/AntiCheat/main/Bypass"))()
	end
})
ACBypass1:AddButton({
	Title = "Bypass Adonis and newindex anticheat",
	Description = "fr",
	Callback = function()
		local getinfo = getinfo or debug.getinfo
		local DEBUG = false
		local Hooked = {}

		local Detected, Kill

		setthreadidentity(2)

		for i, v in getgc(true) do
			if typeof(v) == "table" then
				local DetectFunc = rawget(v, "Detected")
				local KillFunc = rawget(v, "Kill")
			
				if typeof(DetectFunc) == "function" and not Detected then
					Detected = DetectFunc
					
					local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
						if Action ~= "_" then
							if DEBUG then
								warn(`Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}`)
							end
						end
						
						return true
					end)

					table.insert(Hooked, Detected)
				end

				if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
					Kill = KillFunc
					local Old; Old = hookfunction(Kill, function(Info)
						if DEBUG then
							warn(`Adonis AntiCheat tried to kill (fallback): {Info}`)
						end
					end)

					table.insert(Hooked, Kill)
				end
			end
		end

		local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
			local LevelOrFunc, Info = ...

			if Detected and LevelOrFunc == Detected then
				if DEBUG then
					warn(`zins | adonis bypassed`)
				end

				return coroutine.yield(coroutine.running())
			end
			
			return Old(...)
		end))
		-- setthreadidentity(9)
		setthreadidentity(7)

	end
})
ACBypass1:AddButton({
	Title = "Bypass Adonis and newindex anticheat",
	Description = "fr",
	Callback = function()
		local players = game:GetService('Players')
		local lplr = players.LocalPlayer
		local lastCF, stop, heartbeatConnection
		local function start()
			heartbeatConnection = game:GetService('RunService').Heartbeat:Connect(function()
				if stop then
					return 
				end 
				lastCF = lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame
			end)
			lplr.Character:FindFirstChildOfClass('Humanoid').RootPart:GetPropertyChangedSignal('CFrame'):Connect(function()
				stop = true
				lplr.Character:FindFirstChildOfClass('Humanoid').RootPart.CFrame = lastCF
				game:GetService('RunService').Heartbeat:Wait()
				stop = false
			end)    
			lplr.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
				heartbeatConnection:Disconnect()
			end)
		end

		lplr.CharacterAdded:Connect(function(character)
			repeat 
				game:GetService('RunService').Heartbeat:Wait() 
			until character:FindFirstChildOfClass('Humanoid')
			repeat 
				game:GetService('RunService').Heartbeat:Wait() 
			until character:FindFirstChildOfClass('Humanoid').RootPart
			start()
		end)

		lplr.CharacterRemoving:Connect(function()
			heartbeatConnection:Disconnect()
		end)

		start()

	end
})
Debugs:AddButton({
	Title = "SimpleSpy V3",
	Description = "Logs Remotes, you may get kicked if they have good AC or namecall detection recommend the ac bypassers",
	Callback = function()
		if IsOnMobile then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/SimpleSpyV3/mobilemain.lua"))()
		else
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
		end
	end
})
Debugs:AddButton({
	Title = "Hydroxide",
	Description = "Ultimate Debugging, you may get kicked if they have good AC or namecall detection recommend the ac bypassers",
	Callback = function()
		local owner = "Upbolt"
		local branch = "revision"
		local function webImport(file)
			return loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/Hydroxide/%s/%s.lua"):format(owner, branch, file)), file .. '.lua')()
		end
		webImport("init")
		webImport("ui/main")
	end
})
Debugs:AddButton({
	Title = "HttpSpy",
	Description = "Checks for Http request or post",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Httpspy/main/httpspy.txt"))()
	end
})
Debugs:AddButton({
	Title = "Game Tool Giver",
	Description = "A GUI that gives you tools found in the game by putting it in your backpack.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gametoolgiver.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Tool Equipper",
	Description = "A GUI that equips the tool found in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gametoolequipper.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game UI/Frame Viewer",
	Description = "A GUI that allows you to toggle and see hidden guis found in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameuigiver.lua"))()
	end
})
Debugs:AddInput({
	Title = "GUI Stealer",
	Default = "Put name of gui u want to convert must be screengui",
	Placeholder = "Put name of gui u want to convert must be screengui",
	Numeric = false, -- Only allows numbers
	Finished = false, -- Only calls callback when you press enter
	Callback = function(Value)
		local UIPath
		for i,v in pairs(game:GetDescendants()) do
			if v.Name == Value and v:IsA("ScreenGui") then
				UIPath = v
			end
		end
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/debugnation/main/decompilers%20and%20debugging/guistealer.txt"))()
	end
})
Debugs:AddButton({
	Title = "Game Fire RemoteEvent FireServer() GUI",
	Description = "A GUI that when clicked calls FireServer() to the found RemoteEvent in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremotefireserver.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Fire RemoteEvent InvokeClient() GUI",
	Description = "A GUI that when clicked calls InvokeClient() to the found RemoteEvent in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremoteinvokeclient.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Fire RemoteEvent InvokeServer() GUI",
	Description = "A GUI that when clicked calls InvokeServer() to the found RemoteEvent in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameinvokeserver.lua"))()
	end
})
Debugs:AddButton({
	Title = "animation logger",
	Description = "A GUI that when local player does a animation it logs it",
	Callback = function()
		--This script made by WaveStorag and ChatGPT
		local gui = Instance.new("ScreenGui")
		gui.Parent = game:GetService("CoreGui")

		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0.3, 0, 0.4, 0)
		frame.Position = UDim2.new(0.35, 0, 0.3, 0)
		frame.BackgroundColor3 = Color3.new(0, 0, 0)
		frame.BorderSizePixel = 0  -- Remove border
		frame.Parent = gui

		frame.Draggable = true
		frame.Active = true

		local topBar = Instance.new("Frame")
		topBar.Size = UDim2.new(1, 0, 0, 30)
		topBar.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
		topBar.BorderSizePixel = 0  -- Remove border
		topBar.Parent = frame

		local titleLabel = Instance.new("TextLabel")
		titleLabel.Size = UDim2.new(1, -380, 1, 0)
		titleLabel.Position = UDim2.new(0, 0, 0, 0)
		titleLabel.BackgroundTransparency = 1
		titleLabel.Text = "Animation Logger"
		titleLabel.Font = Enum.Font.SourceSans
		titleLabel.TextColor3 = Color3.new(1, 1, 1)
		titleLabel.TextSize = 20
		titleLabel.Parent = topBar

		local clearButton = Instance.new("TextButton")
		clearButton.Size = UDim2.new(0, 60, 0, 30)
		clearButton.Position = UDim2.new(1, -140, 0, 0)
		clearButton.BackgroundColor3 = Color3.new(1, 0, 0)
		clearButton.Text = "Clear All"
		clearButton.TextColor3 = Color3.new(1, 1, 1)
		clearButton.TextSize = 19
		clearButton.Font = Enum.Font.SourceSans
		clearButton.BackgroundTransparency = 1
		clearButton.Parent = topBar

		local scrollFrame = Instance.new("ScrollingFrame")
		scrollFrame.Size = UDim2.new(1, 0, 1, -30)
		scrollFrame.Position = UDim2.new(0, 0, 0, 30)
		scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
		scrollFrame.ScrollBarThickness = 10
		scrollFrame.Parent = frame
		scrollFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)

		local logLayout = Instance.new("UIListLayout")
		logLayout.Parent = scrollFrame
		logLayout.SortOrder = Enum.SortOrder.LayoutOrder

		local loggedAnimations = {}

		local function logAnimation(animationName, animationId)
			if loggedAnimations[animationId] then
				return -- Animation already logged, exit function
			end
			loggedAnimations[animationId] = true -- Mark animation as logged
			local logEntry = Instance.new("TextButton")
			logEntry.Size = UDim2.new(1, -10, 0, 60) -- Increased height to accommodate both name and ID
			logEntry.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
			logEntry.Text = string.format("%s\nAnimation ID: %s", animationName, animationId) -- Display animation name and ID
			logEntry.TextWrapped = true -- Wrap text to fit within button
			logEntry.Font = Enum.Font.SourceSans
			logEntry.TextColor3 = Color3.new(1, 1, 1)
			logEntry.TextSize = 18
			logEntry.Parent = scrollFrame
			logEntry.MouseButton1Click:Connect(function()
				setclipboard(animationId)
			end)
			scrollFrame.CanvasSize = UDim2.new(0, 0, 0, logLayout.AbsoluteContentSize.Y)
		end

		logLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			scrollFrame.CanvasSize = UDim2.new(0, 0, 0, logLayout.AbsoluteContentSize.Y)
		end)

		local function onAnimationPlayed(animationTrack)
			local animation = animationTrack.Animation
			if animation then
				local animationId = animation.AnimationId
				local animationName = animation.Name or "Unknown Animation"
				logAnimation(animationName, animationId)
			end
		end

		local function trackPlayerAnimations()
			local player = game:GetService("Players").LocalPlayer
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoid = character:WaitForChild("Humanoid")
			humanoid.AnimationPlayed:Connect(onAnimationPlayed)
		end

		trackPlayerAnimations()

		clearButton.MouseButton1Click:Connect(function()
			for _, child in ipairs(scrollFrame:GetChildren()) do
				if child:IsA("TextButton") then
					child:Destroy()
				end
			end
			loggedAnimations = {}
			scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
		end)

		local xButton = Instance.new("TextButton")
		xButton.Size = UDim2.new(0, 30, 0, 30)
		xButton.Position = UDim2.new(1, -30, 0, 0)
		xButton.BackgroundColor3 = Color3.new(1, 0, 0)
		xButton.Text = "X"
		xButton.TextColor3 = Color3.new(1, 1, 1)
		xButton.TextSize = 24
		xButton.Font = Enum.Font.SourceSans
		xButton.BackgroundTransparency = 1
		xButton.Parent = topBar

		xButton.MouseButton1Click:Connect(function()
			gui:Destroy()
		end)

		local minimizeButton = Instance.new("TextButton")
		minimizeButton.Size = UDim2.new(0, 30, 0, 30)
		minimizeButton.Position = UDim2.new(1, -60, 0, 0)
		minimizeButton.BackgroundColor3 = Color3.new(0, 0, 1)
		minimizeButton.Text = "–"
		minimizeButton.TextColor3 = Color3.new(1, 1, 1)
		minimizeButton.TextSize = 24
		minimizeButton.Font = Enum.Font.SourceSans
		minimizeButton.BackgroundTransparency = 1
		minimizeButton.Parent = topBar

		-- Functionality to minimize/maximize the GUI when minimize button is clicked
		local isMinimized = false
		local originalSize = frame.Size
		minimizeButton.MouseButton1Click:Connect(function()
			isMinimized = not isMinimized
			if isMinimized then
				minimizeButton.Text = "+"
				frame.Size = UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, 30) -- Minimized size
				scrollFrame.Visible = false
			else
				minimizeButton.Text = "–"
				frame.Size = originalSize -- Restore to original size
				scrollFrame.Visible = true
			end
		end)
	end
})
Debugs:AddButton({
	Title = "audio logger",
	Description = "A GUI that when audio is played it logs it",
	Callback = function()
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua'),true))()
	end
})
Debugs:AddButton({
	Title = "Game Subplace viewer",
	Description = "A GUI that shows all the subplaces of the current game and game ids",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/subplaceviewer.txt"))()
	end
})
Debugs:AddButton({
	Title = "Mobile Console Viewer",
	Description = "view console on mobile",
	Callback = function()
		local console = loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/debugnation/main/decompilers%20and%20debugging/Console%20UI.lua"))()
		local ui = console:load()
	end
})
Debugs:AddButton({
	Title = "Game saver",
	Description = "uses executor saveinstance()",
	Callback = function()
		saveinstance()
	end
})
Debugs:AddButton({
	Title = "Game saver 2",
	Description = "uses executor saveplace()",
	Callback = function()
		saveplace({FileName = "SkyHubSavedGame"})
	end
})
Debugs:AddButton({
	Title = "Game saver 3",
	Description = "uses online or script or sum saveinstance() DONT NEED SAVE INSTANCE",
	Callback = function()
		if saveinstance then
			getgenv().saveinstance = nil
		end
		loadstring(game:HttpGet("https://github.com/MuhXd/Roblox-mobile-script/blob/main/Arecus-X-Neo/Saveinstance.lua?raw=true"))();
	end
})
Debugs:AddButton({
	Title = "Xanes Model Recreator",
	Description = "copys link to scriptbloxpage",
	Callback = function()
		setclipboard("https://scriptblox.com/script/Universal-Script-Xanes-Model-Recreator-9892")

	end
})
local Settings = Window:AddTab({
	Title = "Settings",
	Icon = "settings"
})
InterfaceManager:BuildInterfaceSection(Settings)

SaveManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({
	'TextboxIdentifier'
})
SaveManager:SetFolder("Debuggers/Configs")

local Config = Window:AddTab({
	Title = "Config",
	Icon = "settings"
})
SaveManager:BuildConfigSection(Config)

SaveManager:LoadAutoloadConfig()
Window:SelectTab(1)
