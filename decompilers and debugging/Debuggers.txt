UserInputService = game:GetService("UserInputService")
local IsOnMobile = table.find({
	Enum.Platform.IOS,
	Enum.Platform.Android
}, UserInputService:GetPlatform())
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
	Title = "Debuggers",
	SubTitle = "LMAO",
	TabWidth = 160,
	Size = UDim2.fromOffset(580, 460),
	Acrylic = false,
	Theme = "Dark",
	MinimizeKey = Enum.KeyCode.LeftControl
})
local Discord = Window:AddTab({
	Title = "Discords",
	Icon = "globe"
})
local Options = Fluent.Options
Discord:AddButton({
	Title = "Discord Invite",
	Description = "Copys Discord invite link",
	Callback = function()
		setclipboard(string)
	end
})
Discord:AddButton({
	Title = "Discord Invite OLD",
	Description = "Copys OLD Discord invite link",
	Callback = function()
		setclipboard(string2)
		
	end
})
local Debugs = Window:AddTab({
	Title = "Debuggers",
	Icon = "globe"
})
Debugs:AddButton({
	Title = "Dex",
	Description = "Explorer",
	Callback = function()
		if IsOnMobile then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/Dex/Mobile%20Dex%20Explorer.txt"))()
		else
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
		end
	end
})
local ACBypass1 = Window:AddTab({
	Title = "Anti Cheats",
	Icon = "globe"
})
ACBypass1:AddButton({
	Title = "Anti Kick",
	Description = "stops local scripts from kicking you",
	Callback = function()
		local mt = getrawmetatable(game)

		setreadonly(mt, false)

		local oldmt = mt.__namecall

		mt.__namecall = newcclosure(function(Self, ...)


		local method = getnamecallmethod()

		if method == 'Kick' then
		
			print("Tried To kick")
			wait(9e9)
			return nil

		end

		return oldmt(Self, ...)

		end)

		setreadonly(mt, true)
	end
})
ACBypass1:AddButton({
	Title = "Bypass AntiCheats/Kicks",
	Description = "best fr",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/AntiCheat/main/Bypass"))()
	end
})
ACBypass1:AddButton({
	Title = "Bypass Adonis and newindex anticheat",
	Description = "fr",
	Callback = function()
		local getinfo = getinfo or debug.getinfo
		local DEBUG = false
		local Hooked = {}

		local Detected, Kill

		setthreadidentity(2)

		for i, v in getgc(true) do
			if typeof(v) == "table" then
				local DetectFunc = rawget(v, "Detected")
				local KillFunc = rawget(v, "Kill")
			
				if typeof(DetectFunc) == "function" and not Detected then
					Detected = DetectFunc
					
					local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
						if Action ~= "_" then
							if DEBUG then
								warn(`Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}`)
							end
						end
						
						return true
					end)

					table.insert(Hooked, Detected)
				end

				if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
					Kill = KillFunc
					local Old; Old = hookfunction(Kill, function(Info)
						if DEBUG then
							warn(`Adonis AntiCheat tried to kill (fallback): {Info}`)
						end
					end)

					table.insert(Hooked, Kill)
				end
			end
		end

		local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
			local LevelOrFunc, Info = ...

			if Detected and LevelOrFunc == Detected then
				if DEBUG then
					warn(`zins | adonis bypassed`)
				end

				return coroutine.yield(coroutine.running())
			end
			
			return Old(...)
		end))
		-- setthreadidentity(9)
		setthreadidentity(7)

	end
})
Debugs:AddButton({
	Title = "SimpleSpy V3",
	Description = "Logs Remotes, you may get kicked if they have good AC or namecall detection recommend the ac bypassers",
	Callback = function()
		if IsOnMobile then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/SimpleSpyV3/mobilemain.lua"))()
		else
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua"))()
		end
	end
})
Debugs:AddButton({
	Title = "Hydroxide",
	Description = "Ultimate Debugging, you may get kicked if they have good AC or namecall detection recommend the ac bypassers",
	Callback = function()
		local owner = "Upbolt"
		local branch = "revision"
		local function webImport(file)
			return loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/Hydroxide/%s/%s.lua"):format(owner, branch, file)), file .. '.lua')()
		end
		webImport("init")
		webImport("ui/main")
	end
})
Debugs:AddButton({
	Title = "HttpSpy",
	Description = "Checks for Http request or post",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Httpspy/main/httpspy.txt"))()
	end
})
Debugs:AddButton({
	Title = "Game Tool Giver",
	Description = "A GUI that gives you tools found in the game by putting it in your backpack.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gametoolgiver.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Tool Equipper",
	Description = "A GUI that equips the tool found in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gametoolequipper.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game UI/Frame Viewer",
	Description = "A GUI that allows you to toggle and see hidden guis found in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameuigiver.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Fire RemoteEvent FireServer() GUI",
	Description = "A GUI that when clicked calls FireServer() to the found RemoteEvent in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremotefireserver.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Fire RemoteEvent InvokeClient() GUI",
	Description = "A GUI that when clicked calls InvokeClient() to the found RemoteEvent in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremoteinvokeclient.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Fire RemoteEvent InvokeServer() GUI",
	Description = "A GUI that when clicked calls InvokeServer() to the found RemoteEvent in the game.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameinvokeserver.lua"))()
	end
})
Debugs:AddButton({
	Title = "Game Subplace viewer",
	Description = "A GUI that shows all the subplaces of the current game and game ids",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/subplaceviewer.txt"))()
	end
})
Debugs:AddButton({
	Title = "Mobile Console Viewer",
	Description = "view console on mobile",
	Callback = function()
		local console = loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/debugnation/main/decompilers%20and%20debugging/Console%20UI.lua"))()
		local ui = console:load()
	end
})
Debugs:AddButton({
	Title = "Game saver",
	Description = "uses executor saveinstance()",
	Callback = function()
		saveinstance()
	end
})
Debugs:AddButton({
	Title = "Game saver 2",
	Description = "uses executor saveplace()",
	Callback = function()
		saveplace({FileName = "SkyHubSavedGame"})
	end
})
Debugs:AddButton({
	Title = "Game saver 3",
	Description = "uses online or script or sum saveinstance() DONT NEED SAVE INSTANCE",
	Callback = function()
		if saveinstance then
			getgenv().saveinstance = nil
		end
		loadstring(game:HttpGet("https://github.com/MuhXd/Roblox-mobile-script/blob/main/Arecus-X-Neo/Saveinstance.lua?raw=true"))();
	end
})
Debugs:AddButton({
	Title = "Xanes Model Recreator",
	Description = "copys link to scriptbloxpage",
	Callback = function()
		setclipboard("https://scriptblox.com/script/Universal-Script-Xanes-Model-Recreator-9892")

	end
})
local Settings = Window:AddTab({
	Title = "Settings",
	Icon = "settings"
})
InterfaceManager:BuildInterfaceSection(Settings)

SaveManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({
	'TextboxIdentifier'
})
SaveManager:SetFolder("Debuggers/Configs")

local Config = Window:AddTab({
	Title = "Config",
	Icon = "settings"
})
SaveManager:BuildConfigSection(Config)

SaveManager:LoadAutoloadConfig()
Window:SelectTab(1)
